buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
	// Load config.  It shall from now be referenced as simply config or project.config
	def prop = new Properties()
	prop.load(it)
	project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.mc_version}-${config.mod_version}"
group= "iguanaman" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ThaumcraftMobAspects"

task buildInfo {
	def cmd = "git rev-parse --short HEAD"
	def proc = cmd.execute()
	proc.waitFor()
	if (proc.exitValue() == 0) {
		ext.revision = proc.text.trim()
	} else {
		ext.revision = "???????"
	}
}

task setSnapshot << {
	if(System.getenv().DRONE_BUILD_NUMBER != null) {
		project.version = config.mc_version + "-" + config.mod_version + "-snapshot-" + System.getenv().DRONE_BUILD_NUMBER
	} else {
		println 'Not in Drone.io. Reverting to release buildType'
	}
}

task setDev << {
	project.version = "DEV-${project.buildInfo.revision}"
}

minecraft {
    version = "${config.mc_version}-${config.forge_version}"
    assetDir = "../run/assets"
    
    replaceIn "ThaumcraftMobAspects.java"
	replace "@MOD_VERSION@", project.version
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
